{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pablogrillo/Desktop/losty-web/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/pablogrillo/Desktop/losty-web/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var _ref;import axios from'axios';import{useNavigate}from'react-router-dom';var api=axios.create({baseURL:'/api'});// Add a request interceptor\napi.interceptors.request.use(function(config){var token=localStorage.getItem('token');if(token){config.headers.Authorization=\"Bearer \".concat(token);}return config;},function(error){return Promise.reject(error);});api.interceptors.response.use(function(response){return response;},function(_x){return(_ref=_ref||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(error){var originalRequest,refreshToken,response,token,navigate;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:originalRequest=error.config;// If the error status is 401 and there is no originalRequest._retry flag,\n// it means the token has expired and we need to refresh it\nif(!(error.response.status===401&&!originalRequest._retry)){_context.next=17;break;}originalRequest._retry=true;_context.prev=3;refreshToken=localStorage.getItem('refreshToken');_context.next=7;return axios.post('/api/refresh-token',{refreshToken:refreshToken});case 7:response=_context.sent;token=response.data.token;localStorage.setItem('token',token);// Retry the original request with the new token\noriginalRequest.headers.Authorization=\"Bearer \".concat(token);return _context.abrupt(\"return\",axios(originalRequest));case 14:_context.prev=14;_context.t0=_context[\"catch\"](3);throw new Error('Invalid credentials');case 17:if(!(error.response.status===403&&!originalRequest._retry)){_context.next=28;break;}originalRequest._retry=true;_context.prev=19;//navigate to login if its 403\nnavigate=useNavigate();// Initialize the useNavigate hook\n// Clear local storage or take any other appropriate action\nlocalStorage.clear();// Navigate to the login route\nnavigate('/login');_context.next=28;break;case 25:_context.prev=25;_context.t1=_context[\"catch\"](19);throw new Error('Invalid credentials');case 28:return _context.abrupt(\"return\",Promise.reject(error));case 29:case\"end\":return _context.stop();}},_callee,null,[[3,14],[19,25]]);}))).apply(this,arguments);});export default api;","map":{"version":3,"names":["axios","useNavigate","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","concat","error","Promise","reject","response","_x","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","originalRequest","refreshToken","navigate","wrap","_callee$","_context","prev","next","status","_retry","post","sent","data","setItem","abrupt","t0","Error","clear","t1","stop","apply","arguments"],"sources":["/Users/pablogrillo/Desktop/losty-web/client/src/services/createAxiosClient.ts"],"sourcesContent":["import axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst api = axios.create({\n  baseURL: '/api',\n});\n\n// Add a request interceptor\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    // If the error status is 401 and there is no originalRequest._retry flag,\n    // it means the token has expired and we need to refresh it\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const refreshToken = localStorage.getItem('refreshToken');\n        const response = await axios.post('/api/refresh-token', { refreshToken });\n        const { token } = response.data;\n\n        localStorage.setItem('token', token);\n\n        // Retry the original request with the new token\n        originalRequest.headers.Authorization = `Bearer ${token}`;\n        return axios(originalRequest);\n      } catch (error) {\n        // Handle refresh token error or redirect to login\n        throw new Error('Invalid credentials');\n      }\n    }\n\n    if (error.response.status === 403 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        //navigate to login if its 403\n        const navigate = useNavigate(); // Initialize the useNavigate hook\n\n        // Clear local storage or take any other appropriate action\n        localStorage.clear();\n\n        // Navigate to the login route\n        navigate('/login');\n      } catch (error) {\n        // Handle refresh token error or redirect to login\n        throw new Error('Invalid credentials');\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default api"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}